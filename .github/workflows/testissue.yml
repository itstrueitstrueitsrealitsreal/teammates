name: Close Stale Issues - Test Version

on:
  push:
    branches:
      - yml  # Branch to trigger the workflow
  pull_request:
    branches:
      - yml
  schedule:
    - cron: '* * * * *'  # Runs every minute for testing

jobs:
  check_stale_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Close stale issues quickly for testing
        uses: actions/github-script@v6
        with:
          script: |
            const issueAgeLimit = 3;  // 3 minutes for testing
            const warningWaitTime = 2;  // 2 minutes wait time after warning for testing
            const botUsername = 'github-actions[bot]';

            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100,
            });

            for (const issue of issues.data) {
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
              });

              let lastRealActivityDate = new Date(issue.created_at);

              for (const comment of comments.data) {
                if (comment.user.login !== botUsername) {
                  lastRealActivityDate = new Date(comment.updated_at);
                }
              }

              const currentDate = new Date();
              const diffTime = Math.abs(currentDate - lastRealActivityDate);
              const diffMinutes = Math.ceil(diffTime / (1000 * 60));

              if (diffMinutes >= issueAgeLimit) {
                const lastComment = comments.data.length > 0 ? comments.data[comments.data.length - 1] : null;

                if (lastComment && lastComment.body.includes("This issue has been inactive for 5 minutes")) {
                  if (diffMinutes - issueAgeLimit >= warningWaitTime) {
                    await github.rest.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issue.number,
                      body: 'This issue is being closed due to inactivity.',
                    });

                    await github.rest.issues.update({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issue.number,
                      state: 'closed',
                    });
                  }
                } else {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    body: 'This issue has been inactive for 3 minutes. It will be closed in 2 minutes if no further activity occurs.',
                  });
                }
              }
            }
